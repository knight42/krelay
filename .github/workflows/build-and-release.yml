name: "Cross Platform Build"
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]
  schedule:
  - cron: "0 0 * * 1" # At 0:00 on Monday
  workflow_dispatch: {}
concurrency:
  group: ci-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: write
  pull-requests: read
env:
  GO_VERSION: 1.18
jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ format('>= {0}', env.GO_VERSION) }}
    - name: Cache Go Module
      uses: actions/cache@v3
      with:
        # In order:
        # * Module download cache
        # * Build cache (Linux)
        # * Build cache (Mac)
        # * Build cache (Windows)
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Test
      run: make test
    - name: Lint
      uses: golangci/golangci-lint-action@v3
      with:
        # don't cache or restore ~/go/pkg
        skip-pkg-cache: true
        only-new-issues: true

  release:
    runs-on: ubuntu-latest
    needs:
    - test
    name: Release
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v3
    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: Cache Go Module
      uses: actions/cache@v3
      with:
        # In order:
        # * Module download cache
        # * Build cache (Linux)
        # * Build cache (Mac)
        # * Build cache (Windows)
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Build
      run: make -j releases
    - name: Upload Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: kubectl-relay_v*
        draft: false
        prerelease: false
    - name: Update new version in krew-index
      uses: rajatjindal/krew-release-bot@v0.0.42
